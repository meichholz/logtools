.\" Automatically generated by Pod::Man version 1.15
.\" Sat Jan 12 23:54:23 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "tailfdx 8"
.TH tailfdx 8 "0.9.0" "2002-01-07" "logtools"
.UC
.SH "NAME"
tailfd \- multiplex log file changes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBtailfd\fR [\fB\-c\fR \fIconfig-file\fR ] { \fIoptions\fR }
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBtailfd\fR watches a log file and distributes all changes to so called
\&\fIdestinations\fR on a line-by-line basis. Normally it runs as a daemon
and logs to the \fIsyslog\fR daemon.
.PP
The notion \fIdestination\fR means files as well as processes, that are
capable of receiving input through \fBstdin\fR. These destinations are
specified in the configuration file.
.PP
The configuration file is normally read from \fI/etc/tailfd.conf\fR but
can be read from elsewhere through the \fB\-c\fR option.
.PP
The daemon can be shut down at any point by \s-1SIGTERM\s0 and restarted by
\&\s-1SIGHUP\s0. It uses the file \fI/var/Run/tailfd.status\fR as non volatile
memory. You can specify another file name in the configuration file
(see below).
.PP
The Daemon logs to the \fIsyslog\fR on the DAEMON-Facility.
.PP
It creates a normal \s-1PID\s0 file in \fI/var/run/tailfd.pid\fR
unless otherwise stated in the configuration file.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\fB\-c\fR \fIconfig-file\fR" 3
.IX Item "-c config-file"
Use the alternate \fIconfig-file\fR instead of \fI/etc/tailfd.conf\fR.
.Ip "\fB\-d\fR \fIdebugmask\fR" 3
.IX Item "-d debugmask"
Enable debugging messages. Debugging ist performed through syslog. The
debugging mask is a bitvector. The meaning of the particular debugging
flags \fIDEBUG_xxxx\fR can be looked up at the source code.
.Ip "\fB\-f\fR" 3
.IX Item "-f"
Run in foreground and do not daemonize. This is especially useful with
the debugging option \fB\-d\fR to see the messages on \fBstderr\fR.
.Ip "\fB\-q\fR" 3
.IX Item "-q"
Run in quiet mode. Only errors and important messages are logged.
.Ip "\fB\-r\fR" 3
.IX Item "-r"
Restart broken destinations. Normally, when a destination fails (disk
full or broken pipe), the daemon marks it internally as unusuable and
continues it's work without this specific destination. With the option
\&\fB\-r\fR it tries to restart the destination (re-create the pipe, the
file or whatever) and aborts, if this attempt fails. It's up to Your
policy.
.Ip "\fB\-t\fR \fIseconds\fR" 3
.IX Item "-t seconds"
Allow the monitored file to be inaccessable for \fIseconds\fR before the
daemon aborts. Any external facility (loke a log cycler) has to
respect this contraint. \fIseconds\fR defaults to 5 seconds.
.Ip "\fB\-V\fR" 3
.IX Item "-V"
Tell other version number.
.SH "CONFIGURATION FILE"
.IX Header "CONFIGURATION FILE"
The configuration files is in the \s-1INI\s0 style and consists of
\&\fI\s-1SECTIONS\s0\fR that in turn contain \fIkey\fR to \fIvalue\fR
\&\-assignments. Currently only string type assignments are supported.
.PP
There may be \fIcomments\fR in the \s-1UNIX\s0 style with lattices (#) in the
first column.
.Sh "The \s-1DAEMON\s0 section"
.IX Subsection "The DAEMON section"
In the \s-1DAEMON\s0 section global settings are specified.
.Ip "\fIstatusfile\fR" 4
.IX Item "statusfile"
The name of the nonvolatile memory of this particular instance,
overriding the default.
.Ip "\fIpidfile\fR" 4
.IX Item "pidfile"
The name of the \s-1PID\s0 file, overriding the default.
.PP
The other sections specify so called \fIdestinations\fR.  A destination
is the distribution end point for each line of the monitored
file. They can be a plain file or a pipe process (when the \fIcommand\fR
key is present).
.Sh "Destinations"
.IX Subsection "Destinations"
.Ip "\fIstdout\fR" 4
.IX Item "stdout"
The key specifies a file, that is open by the daemons. If there is no
\&\fIcommand\fR given, this file is the direct destination. Normally, this
file is connected to the \fBstdout\fR of the pipe. It may be omitted, if
the pipe does not write to \fBstdout\fR at all.
.Sp
The file is created and truncated per default. It can be appended as
well, if the name is prefixed with a greater-than-sign, like in
\&\fIstdout="\fRmailer.log"> (see the example below.)
.Ip "\fIargs\fR" 4
.IX Item "args"
The optional arguments for the command can be specified here. They are
separated by whitespace. Thus, whitespace itself within the single
arguments must be escaped with backslashes. Additionally, You can
specify \s-1CTRL\s0 codes 0\-25 (\fB\ea\fR \- \fB\ez\fR) and every other character
with the octal notation (\fB\e000\fR \- \fB\e777\fR). Of course, the
backslash itself must be escaped (\fB\e\e\fR) just like the double quotes
(\fB\e"\fR).
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 4
\& [DAEMON]
\& statusfile = "temp.status"
\&    pidfile = "temp.pid"
\&   workdir  = "/home/marian/src/tailfd"
.Ve
.Vb 4
\& [testlog1]
\& command = "logalyzer"
\& args="-c file\ee with\ee space -"
\& stdout=">temp.catout"
.Ve
.Vb 2
\& [testlog2]
\& command = "/usr/local/bin/mklogstat"
.Ve
.Vb 2
\& [FileBin]
\& stdout="temp.out"
.Ve
.SH "BUGS"
.IX Header "BUGS"
Tell me...
.SH "VERSION"
.IX Header "VERSION"
$Id: tailfdx.8,v 1.1 2002/01/12 23:04:40 eichholz Exp $
.SH "AUTHOR"
.IX Header "AUTHOR"
Marian Eichholz <marian.eichholz@freenet-ag.de>
.SH "HISTORY"
.IX Header "HISTORY"
See \fI\s-1README\s0.HISTORY\fR
